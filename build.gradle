plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'java'
    id 'org.springframework.experimental.aot' version '0.12.1'
}

group = 'me.vicasong'
version = '1.3.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    maven { url 'https://repo.spring.io/release' }
    mavenCentral()
}

dependencies {
    implementation group: 'info.picocli', name: 'picocli', version: '4.6.2'

    implementation('org.springframework.boot:spring-boot-starter-web:2.7.1') {
        exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-core'
        exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-websocket'
    }

    implementation 'org.jline:jline:3.21.0'
    // console table helper
    implementation 'org.springframework.shell:spring-shell-table:2.0.1.RELEASE'
    // validation
    implementation 'org.hibernate.validator:hibernate-validator:7.0.5.Final'
    implementation 'org.apache.commons:commons-compress:1.21'

    implementation ('com.google.guava:guava:31.1-jre') {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }
    implementation 'org.jasypt:jasypt:1.9.3'

    // system info
    implementation 'com.github.oshi:oshi-core:6.1.6'
    implementation 'net.java.dev.jna:jna:5.11.0'
    implementation 'net.java.dev.jna:jna-platform:5.11.0'

    compileOnly 'org.springframework.experimental:spring-aot:0.12.1'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.7.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.1'
}


graalvmNative {
    binaries {
        main {
            buildArgs.add('-Dfile.encoding=UTF-8')
            jvmArgs.add('-Dfile.encoding=UTF-8')
            runtimeArgs.add('-Dfile.encoding=UTF-8')
        }
}   }




tasks.named('test') {
    useJUnitPlatform()
    jvmArgs('--enable-preview')
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}
// for bootJar package
//generateAot.enabled = false
//compileAotMainJava.enabled = false
//processAotMainResources.enabled = false
//aotMainClasses.enabled = false
//aotMainJar.enabled = false

//tasks.withType(JavaCompile) {
//    options.compilerArgs.add('--enable-preview')
//}